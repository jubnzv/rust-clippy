error: the `y @ _` pattern can be written as just `y`
  --> $DIR/patterns.rs:10:9
   |
LL |         y @ _ => (),
   |         ^^^^^ help: try: `y`
   |
   = note: `-D clippy::redundant-pattern` implied by `-D warnings`

error: the `x @ _` pattern can be written as just `x`
  --> $DIR/patterns.rs:25:9
   |
LL |         ref mut x @ _ => {
   |         ^^^^^^^^^^^^^ help: try: `ref mut x`

error: the `x @ _` pattern can be written as just `x`
  --> $DIR/patterns.rs:33:9
   |
LL |         ref x @ _ => println!("vec: {:?}", x),
   |         ^^^^^^^^^ help: try: `ref x`

error: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
  --> $DIR/patterns.rs:8:5
   |
LL | /     match v {
LL | |         Some(x) => (),
LL | |         y @ _ => (),
LL | |     }
   | |_____^ help: try this: `if let Some(x) = v { () }`
   |
   = note: `-D clippy::single-match` implied by `-D warnings`

error: aborting due to 4 previous errors

